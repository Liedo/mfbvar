// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// build_U_cpp
arma::mat build_U_cpp(arma::mat Pi, int n_determ, int n_vars, int n_lags);
RcppExport SEXP _mfbvar_build_U_cpp(SEXP PiSEXP, SEXP n_determSEXP, SEXP n_varsSEXP, SEXP n_lagsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< int >::type n_determ(n_determSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type n_lags(n_lagsSEXP);
    rcpp_result_gen = Rcpp::wrap(build_U_cpp(Pi, n_determ, n_vars, n_lags));
    return rcpp_result_gen;
END_RCPP
}
// max_eig_cpp
double max_eig_cpp(arma::mat A);
RcppExport SEXP _mfbvar_max_eig_cpp(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(max_eig_cpp(A));
    return rcpp_result_gen;
END_RCPP
}
// rmatn
arma::mat rmatn(arma::mat M, arma::mat Q, arma::mat P);
RcppExport SEXP _mfbvar_rmatn(SEXP MSEXP, SEXP QSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(rmatn(M, Q, P));
    return rcpp_result_gen;
END_RCPP
}
// rinvwish
arma::mat rinvwish(int v, arma::mat S);
RcppExport SEXP _mfbvar_rinvwish(SEXP vSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(rinvwish(v, S));
    return rcpp_result_gen;
END_RCPP
}
// rmultn
arma::vec rmultn(arma::vec m, arma::mat Sigma);
RcppExport SEXP _mfbvar_rmultn(SEXP mSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmultn(m, Sigma));
    return rcpp_result_gen;
END_RCPP
}
// vec_na_rm
arma::vec vec_na_rm(const arma::vec vx);
RcppExport SEXP _mfbvar_vec_na_rm(SEXP vxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec >::type vx(vxSEXP);
    rcpp_result_gen = Rcpp::wrap(vec_na_rm(vx));
    return rcpp_result_gen;
END_RCPP
}
// smooth
arma::mat smooth(const arma::mat& mZ, const arma::mat& mX, const Rcpp::List& lH, arma::mat& mF, const arma::mat& mB, const arma::mat& mQ, const int iT, const int ip, const int iq, const int is, const arma::vec& h0, const arma::mat& P0, const arma::vec& X0);
RcppExport SEXP _mfbvar_smooth(SEXP mZSEXP, SEXP mXSEXP, SEXP lHSEXP, SEXP mFSEXP, SEXP mBSEXP, SEXP mQSEXP, SEXP iTSEXP, SEXP ipSEXP, SEXP iqSEXP, SEXP isSEXP, SEXP h0SEXP, SEXP P0SEXP, SEXP X0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type mZ(mZSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mX(mXSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type lH(lHSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mF(mFSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mB(mBSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mQ(mQSEXP);
    Rcpp::traits::input_parameter< const int >::type iT(iTSEXP);
    Rcpp::traits::input_parameter< const int >::type ip(ipSEXP);
    Rcpp::traits::input_parameter< const int >::type iq(iqSEXP);
    Rcpp::traits::input_parameter< const int >::type is(isSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type h0(h0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type X0(X0SEXP);
    rcpp_result_gen = Rcpp::wrap(smooth(mZ, mX, lH, mF, mB, mQ, iT, ip, iq, is, h0, P0, X0));
    return rcpp_result_gen;
END_RCPP
}
// smoother
arma::mat smoother(arma::mat Y, arma::mat Lambda, arma::mat Pi_comp, arma::mat Q_comp, int n_T, int n_vars, int n_comp, arma::mat z0, arma::mat P0);
RcppExport SEXP _mfbvar_smoother(SEXP YSEXP, SEXP LambdaSEXP, SEXP Pi_compSEXP, SEXP Q_compSEXP, SEXP n_TSEXP, SEXP n_varsSEXP, SEXP n_compSEXP, SEXP z0SEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi_comp(Pi_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q_comp(Q_compSEXP);
    Rcpp::traits::input_parameter< int >::type n_T(n_TSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type n_comp(n_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(smoother(Y, Lambda, Pi_comp, Q_comp, n_T, n_vars, n_comp, z0, P0));
    return rcpp_result_gen;
END_RCPP
}
// generate_mhh
arma::mat generate_mhh(arma::mat Y, arma::mat Lambda, arma::mat Pi_comp, arma::mat Q_comp, int n_T, int n_vars, int n_comp, arma::mat z0, arma::mat P0);
RcppExport SEXP _mfbvar_generate_mhh(SEXP YSEXP, SEXP LambdaSEXP, SEXP Pi_compSEXP, SEXP Q_compSEXP, SEXP n_TSEXP, SEXP n_varsSEXP, SEXP n_compSEXP, SEXP z0SEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi_comp(Pi_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q_comp(Q_compSEXP);
    Rcpp::traits::input_parameter< int >::type n_T(n_TSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type n_comp(n_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(generate_mhh(Y, Lambda, Pi_comp, Q_comp, n_T, n_vars, n_comp, z0, P0));
    return rcpp_result_gen;
END_RCPP
}
// simulation_smoother
arma::mat simulation_smoother(arma::mat Y, arma::mat Lambda, arma::mat Pi_comp, arma::mat Q_comp, int n_T, int n_vars, int n_comp, arma::mat z0, arma::mat P0);
RcppExport SEXP _mfbvar_simulation_smoother(SEXP YSEXP, SEXP LambdaSEXP, SEXP Pi_compSEXP, SEXP Q_compSEXP, SEXP n_TSEXP, SEXP n_varsSEXP, SEXP n_compSEXP, SEXP z0SEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi_comp(Pi_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q_comp(Q_compSEXP);
    Rcpp::traits::input_parameter< int >::type n_T(n_TSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type n_comp(n_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(simulation_smoother(Y, Lambda, Pi_comp, Q_comp, n_T, n_vars, n_comp, z0, P0));
    return rcpp_result_gen;
END_RCPP
}
// loglike
arma::mat loglike(arma::mat Y, arma::mat Lambda, arma::mat Pi_comp, arma::mat Q_comp, int n_T, int n_vars, int n_comp, arma::mat z0, arma::mat P0);
RcppExport SEXP _mfbvar_loglike(SEXP YSEXP, SEXP LambdaSEXP, SEXP Pi_compSEXP, SEXP Q_compSEXP, SEXP n_TSEXP, SEXP n_varsSEXP, SEXP n_compSEXP, SEXP z0SEXP, SEXP P0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Lambda(LambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Pi_comp(Pi_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q_comp(Q_compSEXP);
    Rcpp::traits::input_parameter< int >::type n_T(n_TSEXP);
    Rcpp::traits::input_parameter< int >::type n_vars(n_varsSEXP);
    Rcpp::traits::input_parameter< int >::type n_comp(n_compSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z0(z0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P0(P0SEXP);
    rcpp_result_gen = Rcpp::wrap(loglike(Y, Lambda, Pi_comp, Q_comp, n_T, n_vars, n_comp, z0, P0));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mfbvar_build_U_cpp", (DL_FUNC) &_mfbvar_build_U_cpp, 4},
    {"_mfbvar_max_eig_cpp", (DL_FUNC) &_mfbvar_max_eig_cpp, 1},
    {"_mfbvar_rmatn", (DL_FUNC) &_mfbvar_rmatn, 3},
    {"_mfbvar_rinvwish", (DL_FUNC) &_mfbvar_rinvwish, 2},
    {"_mfbvar_rmultn", (DL_FUNC) &_mfbvar_rmultn, 2},
    {"_mfbvar_vec_na_rm", (DL_FUNC) &_mfbvar_vec_na_rm, 1},
    {"_mfbvar_smooth", (DL_FUNC) &_mfbvar_smooth, 13},
    {"_mfbvar_smoother", (DL_FUNC) &_mfbvar_smoother, 9},
    {"_mfbvar_generate_mhh", (DL_FUNC) &_mfbvar_generate_mhh, 9},
    {"_mfbvar_simulation_smoother", (DL_FUNC) &_mfbvar_simulation_smoother, 9},
    {"_mfbvar_loglike", (DL_FUNC) &_mfbvar_loglike, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_mfbvar(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
